<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:momimecommon="http://momime/common/database"
	xmlns:momimeclient="http://momime/client/database" targetNamespace="http://momime/client/database">

	<xsd:import namespace="http://momime/common/database" />
	
    <xsd:annotation>
    	<xsd:documentation>Defines the portions of the main data XML file that are needed only on the client, although they still have to be declared within
the common project and so accessible to the server so that the server is able to construct the client database.</xsd:documentation>
	</xsd:annotation>

<!-- The new game database that the server sends to each client before they create a session so they know available databases and new game params -->

	<xsd:complexType name="availableDatabase">
	    <xsd:annotation>
    		<xsd:documentation>Tells client details about one database available on the server, and the new game settings from it.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="1" name="newGameDefaults" type="momimecommon:newGameDefaults" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="overlandMapSize" type="momimecommon:overlandMapSize" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="landProportion" type="momimecommon:landProportion" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="nodeStrength" type="momimecommon:nodeStrength" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="difficultyLevel" type="momimecommon:difficultyLevel" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="fogOfWarSetting" type="momimecommon:fogOfWarSetting" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="unitSetting" type="momimecommon:unitSetting" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="spellSetting" type="momimecommon:spellSetting" />
		</xsd:sequence>
		<xsd:attribute name="dbName" type="momimeclient:filename" use="required" />
	</xsd:complexType>

	<xsd:complexType name="newGameDatabase">
	    <xsd:annotation>
    		<xsd:documentation>Tells client details about all databases available on the server, and their new game settings.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="momimeXmlDatabase" type="momimeclient:availableDatabase" />
		</xsd:sequence>
	</xsd:complexType>

<!-- The client side database that it sends to each client as they join a session -->

	<xsd:complexType name="clientDatabase">
	    <xsd:annotation>
    		<xsd:documentation>Cut down portion of the main server XML that is required on the client - this is converted from
the server XML and send to the client once they join a session.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="plane" type="momimecommon:plane" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="productionType" type="momimecommon:productionType" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="mapFeature" type="momimeclient:mapFeature" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="tileType" type="momimecommon:tileType" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="pickType" type="momimecommon:pickType" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="pick" type="momimecommon:pick" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="wizard" type="momimeclient:wizard" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="race" type="momimecommon:race" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="taxRate" type="momimecommon:taxRate" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="building" type="momimecommon:building" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="unitAttribute" type="momimecommon:unitAttribute" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="unitType" type="momimecommon:unitType" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="unitSkill" type="momimecommon:unitSkill" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="rangedAttackType" type="momimecommon:rangedAttackType" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="unit" type="momimecommon:unit" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="weaponGrade" type="momimecommon:weaponGrade" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="combatAreaEffect" type="momimecommon:combatAreaEffect" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="spell" type="momimecommon:spell" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="unitMagicRealm" type="momimecommon:unitMagicRealm" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="combatTileType" type="momimecommon:combatTileType" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="combatTileBorder" type="momimecommon:combatTileBorder" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="movementRateRule" type="momimecommon:movementRateRule" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="mapFeature">
        <xsd:annotation>
        	<xsd:documentation>Client needs to know that a map feature will be inhabited, but doesn't need to know what by - so we replace the child entities with a simple flag.</xsd:documentation>
        </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="momimecommon:mapFeature">
				<xsd:sequence>
					<xsd:element minOccurs="1" maxOccurs="1" name="anyMagicRealmsDefined" type="xsd:boolean" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="wizard">
        <xsd:annotation>
        	<xsd:documentation>Client only needs to know about the predefined wizard picks for the number of human picks chosen for this game, so we strip out a level.</xsd:documentation>
        </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="momimecommon:wizard">
				<xsd:sequence>
					<xsd:element minOccurs="0" maxOccurs="unbounded" name="wizardPick" type="momimecommon:wizardPick" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
<!--  Simple types -->

	<xsd:simpleType name="filename">
		<xsd:restriction base="xsd:normalizedString" />
	</xsd:simpleType>
	
</xsd:schema>
