<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:nxe="http://www.roughseas.ca/xmleditor/1.0.0"
	xmlns:map="http://www.ndg.com/map" xmlns:momimenewgame="http://momime/common/database/newgame/v0_9_4" targetNamespace="http://momime/common/database/newgame/v0_9_4"
	jaxb:version="2.0">
	
	<xsd:import namespace="http://www.ndg.com/map" schemaLocation="../../../../../NdgMap/src/main/resources/com.ndg.map/Map.xsd" />
	
    <xsd:annotation>
    	<xsd:documentation>Stores elements that are included in the session description.  The reason this is held outside of the common XSD is that
otherwise if we have e.g. MapSizeData and MapData both declared in the same XSD then MapSizeData gets marked with an @XmlSeeAlso tag, so when we
send the session description, it gets sent with MapData objects instead of MapSizeData objects.  Since you can't turn the @XmlSeeAlso tag generation off, the
only way to prevent this is to declare the session description elements in a separate XSD.</xsd:documentation>
	</xsd:annotation>

	<xsd:complexType name="mapSizeData">
        <xsd:annotation>
        	<xsd:documentation>Defines map size details that must be supplied when creating a new game.</xsd:documentation>
        </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="map:coordinateSystem">
				<xsd:sequence>
					<xsd:element minOccurs="1" maxOccurs="1" name="zoneWidth" type="map:mapDimension" nxe:label="Zone Width" nxe:gridwidth="100" />
					<xsd:element minOccurs="1" maxOccurs="1" name="zoneHeight" type="map:mapDimension" nxe:label="Zone Height" nxe:gridwidth="100" />
					<xsd:element minOccurs="1" maxOccurs="1" name="towersOfWizardryCount" type="momimenewgame:mapTileCount" nxe:label="Nbr. Towers of Wizardry" nxe:gridwidth="150" />
					<xsd:element minOccurs="1" maxOccurs="1" name="towersOfWizardrySeparation" type="momimenewgame:integerMapDistance" nxe:label="Towers of Wizardry separation" nxe:gridwidth="180" />
					<xsd:element minOccurs="1" maxOccurs="1" name="continentalRaceChance" type="momimenewgame:percentage" nxe:label="% chance that raider cities are the race chosen for the continent" nxe:gridwidth="300" />
					<xsd:element minOccurs="1" maxOccurs="1" name="citySeparation" type="momimenewgame:integerMapDistance" nxe:label="City separation" nxe:gridwidth="100" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="landProportionData">
        <xsd:annotation>
        	<xsd:documentation>Defines land proportion details that must be supplied when creating a new game.</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="percentageOfMapIsLand" type="momimenewgame:percentage" nxe:label="% of map which is land" nxe:gridwidth="150" />
			<xsd:element minOccurs="1" maxOccurs="1" name="percentageOfLandIsHills" type="momimenewgame:percentage" nxe:label="% of land which is hills" nxe:gridwidth="150" />
			<xsd:element minOccurs="1" maxOccurs="1" name="percentageOfHillsAreMountains" type="momimenewgame:percentage" nxe:label="% of hills which are mountains" nxe:gridwidth="170" />
			<xsd:element minOccurs="1" maxOccurs="1" name="tundraRowCount" type="momimenewgame:mapTileCount" nxe:label="Nbr. rows from map edge where tundra can appear" nxe:gridwidth="270" />
			<xsd:element minOccurs="1" maxOccurs="1" name="riverCount" type="momimenewgame:mapTileCount" nxe:label="Nbr. Rivers on each plane" nxe:gridwidth="150" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="landProportionTileType" type="momimenewgame:landProportionTileType" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="landProportionPlane" type="momimenewgame:landProportionPlane" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="landProportionTileType" nxe:singular="Land Proportion Tile Type" nxe:plural="Land Proportion Tile Types">
        <xsd:annotation>
        	<xsd:documentation>Defines charactistics of terrain which is generated in blobs (trees, desert and swamp).</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="percentageOfLand" type="momimenewgame:percentage" nxe:label="% of land which is this terrain" nxe:gridwidth="180" />
			<xsd:element minOccurs="1" maxOccurs="1" name="eachAreaTileCount" type="momimenewgame:mapTileCount" nxe:label="Approx. size of each area of this terrain" nxe:gridwidth="220" />
		</xsd:sequence>
		<xsd:attribute name="tileTypeID" type="momimenewgame:tileTypeID" use="required" nxe:label="Tile Type ID" nxe:showmaincolumn="false">
			<xsd:annotation>
				<xsd:appinfo>
					<nxe:showreferencedfield>tileTypeDescription</nxe:showreferencedfield>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	
	<xsd:complexType name="landProportionPlane" nxe:singular="Land Proportion Plane" nxe:plural="Land Proportion Planes">
        <xsd:annotation>
        	<xsd:documentation>Defines land proportion values that are different on each plane.</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="featureChance" type="momimenewgame:featureChance" nxe:label="1 in X chance of each terrain tile gaining a special feature/mineral" nxe:gridwidth="350" />
		</xsd:sequence>
		<xsd:attribute name="planeNumber" type="momimenewgame:planeNumber" use="required" nxe:label="Plane Number" nxe:showmaincolumn="false">
			<xsd:annotation>
				<xsd:appinfo>
					<nxe:showreferencedfield>planeDescription</nxe:showreferencedfield>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="nodeStrengthData">
        <xsd:annotation>
        	<xsd:documentation>Defines node strength details that must be supplied when creating a new game.</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="doubleNodeAuraMagicPower" type="momimenewgame:doubledProductionValue" nxe:label="2x node aura magic power" nxe:gridwidth="150" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="nodeStrengthPlane" type="momimenewgame:nodeStrengthPlane" />
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="nodeStrengthPlane" nxe:singular="Node Strength Plane" nxe:plural="Node Strength Planes">
        <xsd:annotation>
        	<xsd:documentation>Defines node strength characteristics that are different on each plane.</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="numberOfNodesOnPlane" type="momimenewgame:numberOfNodesOnPlane" nxe:label="Number of nodes on Plane" nxe:gridwidth="150" />
			<xsd:element minOccurs="1" maxOccurs="1" name="nodeAuraSquaresMinimum" type="momimenewgame:nodeAuraSqaures" nxe:label="Min. map cells node aura covers" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="nodeAuraSquaresMaximum" type="momimenewgame:nodeAuraSqaures" nxe:label="Max. map cells node aura covers" nxe:gridwidth="200" />
		</xsd:sequence>
		<xsd:attribute name="planeNumber" type="momimenewgame:planeNumber" use="required" nxe:label="Plane Number" nxe:showmaincolumn="false">
			<xsd:annotation>
				<xsd:appinfo>
					<nxe:showreferencedfield>planeDescription</nxe:showreferencedfield>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="difficultyLevelData">
        <xsd:annotation>
        	<xsd:documentation>Defines difficulty level details that must be supplied when creating a new game.</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="humanSpellPicks" type="momimenewgame:pickCount" nxe:label="Human spell picks" nxe:gridwidth="100" />
			<xsd:element minOccurs="1" maxOccurs="1" name="aiSpellPicks" type="momimenewgame:pickCount" nxe:label="AI spell picks" nxe:gridwidth="90" />
			<xsd:element minOccurs="1" maxOccurs="1" name="humanStartingGold" type="momimenewgame:undoubledProductionValue" nxe:label="Human starting gold" nxe:gridwidth="110" />
			<xsd:element minOccurs="1" maxOccurs="1" name="aiStartingGold" type="momimenewgame:undoubledProductionValue" nxe:label="AI starting gold" nxe:gridwidth="100" />
			<xsd:element minOccurs="1" maxOccurs="1" name="customWizards" type="xsd:boolean" nxe:label="Custom wizards?" nxe:gridwidth="100" />
			<xsd:element minOccurs="1" maxOccurs="1" name="eachWizardOnlyOnce" type="xsd:boolean" nxe:label="Each wizard only once?" nxe:gridwidth="130" />
			<xsd:element minOccurs="1" maxOccurs="1" name="normalLairCount" type="momimenewgame:lairCount" nxe:label="Nbr. normal lairs" nxe:gridwidth="100" />
			<xsd:element minOccurs="1" maxOccurs="1" name="weakLairCount" type="momimenewgame:lairCount" nxe:label="Nbr. weak lairs" nxe:gridwidth="100" />
			<xsd:element minOccurs="1" maxOccurs="1" name="towerMonstersMinimum" type="momimenewgame:monsterStrength" nxe:label="Tower Min. monster strength" nxe:gridwidth="170" />
			<xsd:element minOccurs="1" maxOccurs="1" name="towerMonstersMaximum" type="momimenewgame:monsterStrength" nxe:label="Tower Max. monster strength" nxe:gridwidth="170" />
			<xsd:element minOccurs="1" maxOccurs="1" name="towerTreasureMinimum" type="momimenewgame:treasureValue" nxe:label="Tower Min. treasure value" nxe:gridwidth="170" />
			<xsd:element minOccurs="1" maxOccurs="1" name="towerTreasureMaximum" type="momimenewgame:treasureValue" nxe:label="Tower Max. treasure value" nxe:gridwidth="170" />
			<xsd:element minOccurs="1" maxOccurs="1" name="raiderCityCount" type="momimenewgame:cityCount" nxe:label="Nbr. raider cities" nxe:gridwidth="100" />
			<xsd:element minOccurs="1" maxOccurs="1" name="raiderCityStartSizeMin" type="momimenewgame:cityPopulationDiv1000" nxe:label="Min. starting size of raider cities" nxe:gridwidth="170" />
			<xsd:element minOccurs="1" maxOccurs="1" name="raiderCityStartSizeMax" type="momimenewgame:cityPopulationDiv1000" nxe:label="Max. starting size of raider cities" nxe:gridwidth="170" />
			<xsd:element minOccurs="1" maxOccurs="1" name="raiderCityGrowthCap" type="momimenewgame:cityPopulationDiv1000" nxe:label="Amount raider cities are allowed to grow" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="wizardCityStartSize" type="momimenewgame:cityPopulationDiv1000" nxe:label="Starting size of wizard cities" nxe:gridwidth="150" />
			<xsd:element minOccurs="1" maxOccurs="1" name="cityMaxSize" type="momimenewgame:cityPopulationDiv1000" nxe:label="Max. city size" nxe:gridwidth="100" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="difficultyLevelPlane" type="momimenewgame:difficultyLevelPlane" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="difficultyLevelPlane" nxe:singular="Difficulty Level - Plane" nxe:plural="Difficulty Level - Planes">
        <xsd:annotation>
        	<xsd:documentation>Defines difficulty level settings that are different on each plane.</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="normalLairMonstersMinimum" type="momimenewgame:monsterStrength" nxe:label="Norm. Lair Min. monster strength" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="normalLairMonstersMaximum" type="momimenewgame:monsterStrength" nxe:label="Norm. Lair Max. monster strength" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="normalLairTreasureMinimum" type="momimenewgame:treasureValue" nxe:label="Norm. Lair Min. treasure value" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="normalLairTreasureMaximum" type="momimenewgame:treasureValue" nxe:label="Norm. Lair Max. treasure value" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="weakLairMonstersMinimum" type="momimenewgame:monsterStrength" nxe:label="Weak Lair Min. monster strength" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="weakLairMonstersMaximum" type="momimenewgame:monsterStrength" nxe:label="Weak Lair Max. monster strength" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="weakLairTreasureMinimum" type="momimenewgame:treasureValue" nxe:label="Weak Lair Min. treasure value" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="weakLairTreasureMaximum" type="momimenewgame:treasureValue" nxe:label="Weak Lair Max. treasure value" nxe:gridwidth="200" />
		</xsd:sequence>
		<xsd:attribute name="planeNumber" type="momimenewgame:planeNumber" use="required" nxe:label="Plane Number" nxe:showmaincolumn="false">
			<xsd:annotation>
				<xsd:appinfo>
					<nxe:showreferencedfield>planeDescription</nxe:showreferencedfield>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="difficultyLevelNodeStrengthData">
        <xsd:annotation>
        	<xsd:documentation>Defines difficulty level details relating to nodes that must be supplied when creating a new game.</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="monstersMinimum" type="momimenewgame:monsterStrength" nxe:label="Min. monster strength" nxe:gridwidth="150" />
			<xsd:element minOccurs="1" maxOccurs="1" name="monstersMaximum" type="momimenewgame:monsterStrength" nxe:label="Max. monster strength" nxe:gridwidth="150" />
			<xsd:element minOccurs="1" maxOccurs="1" name="treasureMinimum" type="momimenewgame:treasureValue" nxe:label="Min. treasure value" nxe:gridwidth="150" />
			<xsd:element minOccurs="1" maxOccurs="1" name="treasureMaximum" type="momimenewgame:treasureValue" nxe:label="Max. treasure value" nxe:gridwidth="150" />
		</xsd:sequence>
		<xsd:attribute name="planeNumber" type="momimenewgame:planeNumber" use="required" nxe:label="Plane Number" nxe:showmaincolumn="false">
			<xsd:annotation>
				<xsd:appinfo>
					<nxe:showreferencedfield>planeDescription</nxe:showreferencedfield>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="fogOfWarSettingData">
        <xsd:annotation>
        	<xsd:documentation>Defines fog of war settings that must be supplied when creating a new game.</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="terrainAndNodeAuras" type="momimenewgame:fogOfWarValue" nxe:label="Terrain and Node Auras" nxe:showmaincolumn="false" />
			<xsd:element minOccurs="1" maxOccurs="1" name="citiesSpellsAndCombatAreaEffects" type="momimenewgame:fogOfWarValue" nxe:label="Cities, Combat Spells and CAEs" nxe:showmaincolumn="false" />
			<xsd:element minOccurs="1" maxOccurs="1" name="units" type="momimenewgame:fogOfWarValue" nxe:label="Units" nxe:showmaincolumn="false" />
			<xsd:element minOccurs="1" maxOccurs="1" name="seeEnemyCityConstruction" type="xsd:boolean" nxe:label="See what enemy cities are constructing?" nxe:gridwidth="200" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="unitSettingData">
        <xsd:annotation>
        	<xsd:documentation>Defines unit settings that must be supplied when creating a new game.</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="unitsPerMapCell" type="momimenewgame:unitCount" nxe:label="Max. units in a map cell" nxe:gridwidth="150" />
			<xsd:element minOccurs="1" maxOccurs="1" name="canExceedMaximumUnitsDuringCombat" type="xsd:boolean" nxe:label="Exceed limit during combat?" nxe:gridwidth="150" />
			<xsd:element minOccurs="1" maxOccurs="1" name="maxHeroes" type="momimenewgame:unitCount" nxe:label="Max. heroes hired at once" nxe:gridwidth="150" />
			<xsd:element minOccurs="1" maxOccurs="1" name="rollHeroSkillsAtStartOfGame" type="xsd:boolean" nxe:label="Roll hero skills at start of game?" nxe:gridwidth="170" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="spellSettingData">
        <xsd:annotation>
        	<xsd:documentation>Defines standard spell settings choosable on the new game form, i.e. original/recommended.</xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1" name="switchResearch" type="momimenewgame:switchResearch" nxe:label="Switch spell research?" nxe:showmaincolumn="false" />
			<xsd:element minOccurs="1" maxOccurs="1" name="spellBooksToObtainFirstReduction" type="momimenewgame:spellBookCount" nxe:label="Spell books to obtain first reduction" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="spellBooksCastingReduction" type="momimenewgame:percentage" nxe:label="% casting reduction from each book" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="spellBooksCastingReductionCap" type="momimenewgame:castingReductionCap" nxe:label="% casting reduction cap" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="spellBooksCastingReductionCombination" type="momimenewgame:castingReductionCombination" nxe:label="Casting reduction combination rule" nxe:showmaincolumn="false" />
			<xsd:element minOccurs="1" maxOccurs="1" name="spellBooksResearchBonus" type="momimenewgame:percentage" nxe:label="% research bonus from each book" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="spellBooksResearchBonusCap" type="momimenewgame:castingReductionCap" nxe:label="% research bonus cap" nxe:gridwidth="200" />
			<xsd:element minOccurs="1" maxOccurs="1" name="spellBooksResearchBonusCombination" type="momimenewgame:castingReductionCombination" nxe:label="Research bonus combination rule" nxe:showmaincolumn="false" />
		</xsd:sequence>
	</xsd:complexType>

<!--  New game settings data types -->
	
	<xsd:simpleType name="percentage">
		<xsd:restriction base="xsd:unsignedShort">
			<xsd:maxInclusive value="100"></xsd:maxInclusive>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:simpleType name="doubledProductionValue">
        <xsd:annotation>
        	<xsd:documentation>Stores an amount of production something generates, or upkeep that something consumes.  Most production values in the game are stored as doubled values.</xsd:documentation>
        </xsd:annotation>
		<xsd:restriction base="xsd:int" />
	</xsd:simpleType>
	
	<xsd:simpleType name="undoubledProductionValue">
        <xsd:annotation>
        	<xsd:documentation>Stores an amount of production something generates, or upkeep that something consumes.  Most upkeep values in the game are stored directly, not doubled.</xsd:documentation>
        </xsd:annotation>
		<xsd:restriction base="xsd:int" />
	</xsd:simpleType>

	<xsd:simpleType name="mapTileCount">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>
	
	<xsd:simpleType name="featureChance">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>
	
	<xsd:simpleType name="cityPopulation">
        <xsd:annotation>
        	<xsd:documentation>Represents how many people are in a city.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>
	
	<xsd:simpleType name="cityPopulationDiv1000">
        <xsd:annotation>
        	<xsd:documentation>Represents how many population figures are in a city, i.e. population divided by 1000 rounded down.</xsd:documentation>
        </xsd:annotation>
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>

	<xsd:simpleType name="unitCount">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>

	<xsd:simpleType name="monsterStrength">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>

	<xsd:simpleType name="treasureValue">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>

	<xsd:simpleType name="spellBookCount">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>

	<xsd:simpleType name="castingReductionCap">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>
	
	<xsd:simpleType name="lairCount">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>

	<xsd:simpleType name="cityCount">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>

	<xsd:simpleType name="numberOfNodesOnPlane">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>
	
	<xsd:simpleType name="nodeAuraSqaures">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>
	
	<xsd:simpleType name="pickCount">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>

	<xsd:simpleType name="integerMapDistance">
        <xsd:annotation>
        	<xsd:documentation>The number of map tiles between two locations on the map, as an integer (rounded) number (often the actual number of map moves it will take to get somewhere).</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>

<!-- PK identifiers for the client database entities defined in the common XSD -->
	
	<xsd:simpleType name="planeNumber">
		<xsd:restriction base="xsd:unsignedShort" />
	</xsd:simpleType>
	
	<xsd:simpleType name="tileTypeID">
		<xsd:restriction base="xsd:normalizedString" />
	</xsd:simpleType>
	
<!-- New game database enums -->

	<xsd:simpleType name="fogOfWarValue" nxe:singular="Fog of War Value">
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="A"><xsd:annotation>
				<xsd:documentation>Always see once seen</xsd:documentation>
				<xsd:appinfo><jaxb:typesafeEnumMember name="ALWAYS_SEE_ONCE_SEEN"/></xsd:appinfo>
			</xsd:annotation></xsd:enumeration>
			<xsd:enumeration value="R"><xsd:annotation>
				<xsd:documentation>Remember as last seen</xsd:documentation>
				<xsd:appinfo><jaxb:typesafeEnumMember name="REMEMBER_AS_LAST_SEEN"/></xsd:appinfo>
			</xsd:annotation></xsd:enumeration>
			<xsd:enumeration value="F"><xsd:annotation>
				<xsd:documentation>Forget</xsd:documentation>
				<xsd:appinfo><jaxb:typesafeEnumMember name="FORGET"/></xsd:appinfo>
			</xsd:annotation></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:simpleType name="switchResearch" nxe:singular="Switch Research">
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="D"><xsd:annotation>
				<xsd:documentation>Switch disallowed until finish current research</xsd:documentation>
				<xsd:appinfo><jaxb:typesafeEnumMember name="DISALLOWED"/></xsd:appinfo>
			</xsd:annotation></xsd:enumeration>
			<xsd:enumeration value="N"><xsd:annotation>
				<xsd:documentation>Switch allowed only if current research not started</xsd:documentation>
				<xsd:appinfo><jaxb:typesafeEnumMember name="ONLY_IF_NOT_STARTED"/></xsd:appinfo>
			</xsd:annotation></xsd:enumeration>
			<xsd:enumeration value="L"><xsd:annotation>
				<xsd:documentation>Switch allowed but lose research put into current spell</xsd:documentation>
				<xsd:appinfo><jaxb:typesafeEnumMember name="LOSE_CURRENT_RESEARCH"/></xsd:appinfo>
			</xsd:annotation></xsd:enumeration>
			<xsd:enumeration value="F"><xsd:annotation>
				<xsd:documentation>Switch freely</xsd:documentation>
				<xsd:appinfo><jaxb:typesafeEnumMember name="FREE"/></xsd:appinfo>
			</xsd:annotation></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="castingReductionCombination" nxe:singular="Casting Reduction Combination">
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="A"><xsd:annotation>
				<xsd:documentation>Additive</xsd:documentation>
				<xsd:appinfo><jaxb:typesafeEnumMember name="ADDITIVE"/></xsd:appinfo>
			</xsd:annotation></xsd:enumeration>
			<xsd:enumeration value="M"><xsd:annotation>
				<xsd:documentation>Multiplicative</xsd:documentation>
				<xsd:appinfo><jaxb:typesafeEnumMember name="MULTIPLICATIVE"/></xsd:appinfo>
			</xsd:annotation></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

</xsd:schema>
